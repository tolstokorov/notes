// Окна

let win = window.open(url, name, params); // возвращает ссылку на объект window нового окна, либо null

params= { // это пожелания; браузер может проигнорировать

    // Настройки расположения окна (number):
        left, top, // Координаты верхнего левого угла относительно экрана.
            // Ограничение: новое окно не может быть позиционированно за пределами экрана.
        width, height, // Ширина/высота нового окна. Минимальные значения ограничены.

    
    // Свойства окна (yes/no; по умолчанию no):
        menubar, // Скрыть или показать строку меню браузера.
        toolbar, // Показать или скрыть панель навигации браузера в новом окне.
        location, // Показать/скрыть поле URL‑адреса в новом окне.
        status, // Показать или скрыть строку состояния.
        resizable, // Позволяет отключить возможность изменять размеры нового окна.
        scrollbars, // Разрешает убрать полосы прокрутки для нового окна.

}

window.open; // у родителя - ссылка на новое окно
window.opener; // у дочернего окна - ссылка на родителя 

// события при работе с окном браузера:
    resize; // событие изменения размера окна
    scroll; // событие при прокрутке окна
    load; // полностью загрузилась страница со всеми ресурсами
    focus; // получение фокуса
    blur; // потеря фокуса

window.closed; // равно true , если окно закрыто
window.close(); // закрывает окно

win.moveBy(x,y); // Перемещает окно относительно текущего положения на x пикселей вправо и y пикселей вниз. Допускаются отрицательные значения.
win.moveTo(x,y); // Передвигает окно в заданную координатами x и y точку экрана монитора.
win.resizeBy(width,height); // Изменяет размер окна на заданную величину. Допускаются отрицательные значения.
win.resizeTo(width,height); // Изменяет размер окна на заданное значение

win.scrollBy(x,y); // Прокрутка окна на заданное число пикселей вперед или назад. Допускаются отрицательные значения.
win.scrollTo(x,y); // Прокручивает окно к заданным координатам.
elem.scrollIntoView(top); // вызывается на элементе. окно прокручивается так, чтобы элемент был полностью видим.
// Если top - true или не задан, то верх элемента совпадает с верхом окна.
// Если top - false , то окно прокручивается так, чтобы нижний край элемента совпал с нижним краем окна.


// Фреймы

iframe.contentWindow; // ссылка на объект window внутреннего окна
    // iframe.contentDocument или iframe.document - устаревшие св-ва

src="javascript:'тест'"
src="about:blank"

iframe.readyState; // готовность документа в iframe


window.frames; // коллекция фреймов документа
    window.frames[0] // доступ по номеру
    window.frames.iframeName // доступ по имени

window.parent // ссылка на родительское окно (из iframe)
window.top // ссылка на самое верхнее окно в иерархии

sandbox // атрибут <iframe sandbox> (по умолчанию отключает всё)
    // Заставляет браузер считать iframe загруженным с другого источника,
    //     так что он и внешнее окно больше не могут обращаться к переменным друг друга.
    // Отключает формы и скрипты в iframe.
    // Запрещает менять parent.location из iframe.

    // Разрешить:
    'allow‑same‑origin' // Браузер будет считать документ в iframe пришедшим с другого домена
    'allow‑top‑navigation' // Разрешает iframe менять parent.location
    'allow‑forms' // Разрешает отправлять формы из iframe
    'allow‑scripts' // Разрешает выполнение скриптов из iframe. Но скриптам, всё же, будет запрещено открывать попапы


// Два URL считаются имеющим один источник ('same origin'), если у них одинаковый протокол, домен и порт

iframe.contentWindow.location.href; // читать нельзя, записывать можно



// Разные подсайты в рамках одного общего проекта могут взаимодействовать без ограничений
// на всех этих сайтах должен быть код:
document.domain = 'site.com';

targetWin.postMessage(data, targetOrigin); // отправить сообщение в targetWin (iframe, окно, вкладка)
    data; // Данные; любой объект.
    targetOrigin; // Разрешить получение сообщения только окнам с данного источника. (Проверку осуществляет браузер)

message; // событие получения сообщения (через addEventListener; Задержка отсутствуют)
    data; // Присланные данные
    origin; // Источник, из которого пришло сообщение
    source; // Ссылка на окно, с которого пришло сообщение



    
//Clickjacking - угон клика
    'X‐Frame‐Options'; // заголовок 
        'SAMEORIGIN'; // Рендеринг документа, при открытии во фрейме, производится только в том случае,
            //  когда верхний (top) документ – с того же домена.
        'DENY'; // Рендеринг документа внутри фрейма запрещён.
        'ALLOW‑FROM'; // domain; Разрешает рендеринг, если внешний документ с данного домена