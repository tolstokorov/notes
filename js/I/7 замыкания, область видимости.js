// global object в браузере window
globalThis; // межплатформенная ссылка на global object; в браузере указывает на window

window.x = 42;

// К началу выполнения кода:

    // 1. Функции, объявленные как Function Declaration,
    // создаются полностью и готовы к использованию.

    // 2. Переменные (var) объявлены, но равны undefined.
    // Присваивания выполнятся позже, когда выполнение дойдет до них.



// LexicalEnvironment - спец внутренний объект функции, создаётся при её запуске
// состоит из Environment Record и ссылки на внешнее лексическое окружение

// [[Scope]] в ES5 / [[Environment]] в ES6 - ссылка на внешний LexicalEnvironment (место создания);
    // возникает при создании функции;
    // при вызове функции передаётся во вновь созданный LexicalEnvironment;




// Управление памятью в JavaScript определяется принципом достижимости (reachability).
// Достижимо то, что в "корнях" (глобальные переменные и локальные переменные и параметры вызванных функций)
    // и доступно по цепочке ссылок из "корней".

// Garbage collection - сборка мусора
// Garbage collector - сборщик мусора



// НЕТ в "use strict"; использует в качестве области видимости для переменных произвольный объект
with(obj) {
    x = 42;
} // эквивалентно obj.x = 42;

